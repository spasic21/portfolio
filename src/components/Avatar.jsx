/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/avatar.glb 
*/

import React, {useEffect} from 'react'
import {useGraph} from '@react-three/fiber'
import {useGLTF, useAnimations} from '@react-three/drei'
import {SkeletonUtils} from 'three-stdlib'

const Avatar = ({animationName = 'idle', ...props}) => {
    const group = React.useRef()
    const {scene, animations} = useGLTF(import.meta.env.BASE_URL + 'models/avatar.glb')
    const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
    const {nodes, materials} = useGraph(clone)
    const {actions} = useAnimations(animations, group)

    useEffect(() => {
      actions[animationName].reset().fadeIn(0.5).play();

      return () => actions[animationName].fadeOut(0.5);
    }, [animationName]);

    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                    <primitive object={nodes.mixamorigHips}/>
                    <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry}
                                 material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton}/>
                    <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry}
                                 material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton}/>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload(import.meta.env.BASE_URL + 'models/avatar.glb')

export default Avatar;